# AI/docker-compose.yml

services:
  # Redis 서비스 추가
  redis:
    image: "redis:alpine"
    container_name: momo_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - momo_network

  # FastAPI 애플리케이션 서버
  fastapi:
    image: ganghyoun/moggulmoggul-ai:latest 
    container_name: momo_fastapi
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    # Redis가 먼저 실행되도록 depends_on 추가
    depends_on:
      - redis
    networks:
      - momo_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"] # /docs 엔드포인트로 변경
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Celery 워커 서버
  celery:
    image: ganghyoun/moggulmoggul-ai:latest
    container_name: momo_celery
    restart: unless-stopped
    command: celery -A app.celery_config.celery_app worker --loglevel=info
    env_file:
      - .env
    # Redis가 먼저 실행되도록 depends_on 추가
    depends_on:
      - redis
    networks:
      - momo_network
    healthcheck:
      test: ["CMD", "celery", "-A", "app.celery_config.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# 모든 컨테이너가 같은 네트워크를 공유하도록 설정
networks:
  momo_network:
    driver: bridge
