version: '3.8'

services:
  # 1. 'base' 서비스를 추가하여 공통 이미지를 먼저 빌드합니다.
  #    이 서비스는 실행되지 않고 빌드 역할만 합니다.
  base:
    build:
      context: .
      dockerfile: Dockerfile
    image: ai-base:1.0.0

  db:
    image: postgres:13
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    restart: always

  redis:
    image: redis:6.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  web:
    # 2. 'base' 서비스에 대한 의존성을 추가하여 빌드 순서를 보장합니다.
    depends_on:
      - base
      - db
      - redis
    build:
      context: .
      # 3. 'Dockerfile.base' 대신 'Dockerfile.web'을 사용하도록 변경합니다.
      dockerfile: Dockerfile.web
    container_name: web
    env_file:
      - .env
    ports:
      - "8000:8000"
    restart: always

  celery:
    depends_on:
      - base
      - redis
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: celery
    env_file:
      - .env
    restart: always

volumes:
  postgres_data:
